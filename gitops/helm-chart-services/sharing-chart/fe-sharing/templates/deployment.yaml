{{- if .Values.deployment.enabled }}
{{- $fullName := include "template.fullname" . -}}
{{- $ns := include "template.namespace" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  namespace: {{ $ns }}
  labels:
    {{- include "template.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      {{- include "template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "template.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "template.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.image.ports }}
            - name: {{ .namePort }}
              containerPort: {{ .port }}
              protocol: {{ .protocol}}
            {{- end }}
          env:
            - name: TZ
              value: Asia/Ho_Chi_Minh
          {{- with .Values.healthCheckPod.livenessProbe }}
          {{- if .enabled }}
          livenessProbe:
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
            initialDelaySeconds: {{ .initialDelaySeconds}}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}

          {{- with .Values.healthCheckPod.readinessProbe }}
          {{- if .enabled }}
          readinessProbe:
            httpGet:
              path: {{ .httpGet.path }}
              port: {{ .httpGet.port }}
            initialDelaySeconds: {{ .initialDelaySeconds}}
            periodSeconds: {{ .periodSeconds }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.pvc.mountPath }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "cephfs-pvc-{{ $fullName }}"
            readOnly: false     
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: k8s-$k8s_service_name
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
